//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 

using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;

#pragma warning disable 1591

namespace NamirialApiClient.Web_References.com.significant.www {
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    [WebServiceBinding(Name="ApiSoap", Namespace="http://www.eSignAnyWhere.com/")]
    public partial class Api : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadTemporarySspFile_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DisposeSspFile_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdHocWorkstepConfiguration_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareSendEnvelopeSteps_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadCompletedDocument_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnvelopeById_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEnvelopes_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback FindEnvelopes_v2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEnvelope_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEnvelopeFromTemplate_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendReminders_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEnvelope_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelEnvelope_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback RestartEnvelope_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplaceRecipient_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDraft_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDraftFromTemplate_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadUserFile_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersion_v1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAuthorization_v1OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Api() {
            this.Url = global::NamirialApiClient.Properties.Settings.Default.NamirialApiClient_com_significant_www_Api;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadTemporarySspFile_v1CompletedEventHandler UploadTemporarySspFile_v1Completed;
        
        /// <remarks/>
        public event DisposeSspFile_v1CompletedEventHandler DisposeSspFile_v1Completed;
        
        /// <remarks/>
        public event GetAdHocWorkstepConfiguration_v1CompletedEventHandler GetAdHocWorkstepConfiguration_v1Completed;
        
        /// <remarks/>
        public event PrepareSendEnvelopeSteps_v1CompletedEventHandler PrepareSendEnvelopeSteps_v1Completed;
        
        /// <remarks/>
        public event DownloadCompletedDocument_v1CompletedEventHandler DownloadCompletedDocument_v1Completed;
        
        /// <remarks/>
        public event GetEnvelopeById_v1CompletedEventHandler GetEnvelopeById_v1Completed;
        
        /// <remarks/>
        public event FindEnvelopes_v1CompletedEventHandler FindEnvelopes_v1Completed;
        
        /// <remarks/>
        public event FindEnvelopes_v2CompletedEventHandler FindEnvelopes_v2Completed;
        
        /// <remarks/>
        public event SendEnvelope_v1CompletedEventHandler SendEnvelope_v1Completed;
        
        /// <remarks/>
        public event SendEnvelopeFromTemplate_v1CompletedEventHandler SendEnvelopeFromTemplate_v1Completed;
        
        /// <remarks/>
        public event SendReminders_v1CompletedEventHandler SendReminders_v1Completed;
        
        /// <remarks/>
        public event DeleteEnvelope_v1CompletedEventHandler DeleteEnvelope_v1Completed;
        
        /// <remarks/>
        public event CancelEnvelope_v1CompletedEventHandler CancelEnvelope_v1Completed;
        
        /// <remarks/>
        public event NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventHandler NotifyEnvelopeWorkstepIsCompleted_v1Completed;
        
        /// <remarks/>
        public event RestartEnvelope_v1CompletedEventHandler RestartEnvelope_v1Completed;
        
        /// <remarks/>
        public event ReplaceRecipient_v1CompletedEventHandler ReplaceRecipient_v1Completed;
        
        /// <remarks/>
        public event CreateDraft_v1CompletedEventHandler CreateDraft_v1Completed;
        
        /// <remarks/>
        public event CreateDraftFromTemplate_v1CompletedEventHandler CreateDraftFromTemplate_v1Completed;
        
        /// <remarks/>
        public event UploadUserFile_v1CompletedEventHandler UploadUserFile_v1Completed;
        
        /// <remarks/>
        public event GetVersion_v1CompletedEventHandler GetVersion_v1Completed;
        
        /// <remarks/>
        public event ValidateAuthorization_v1CompletedEventHandler ValidateAuthorization_v1Completed;
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/UploadTemporarySspFile_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadTemporarySspFile_v1(string authorizationXml, string fileXml) {
            object[] results = this.Invoke("UploadTemporarySspFile_v1", new object[] {
                        authorizationXml,
                        fileXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadTemporarySspFile_v1Async(string authorizationXml, string fileXml) {
            this.UploadTemporarySspFile_v1Async(authorizationXml, fileXml, null);
        }
        
        /// <remarks/>
        public void UploadTemporarySspFile_v1Async(string authorizationXml, string fileXml, object userState) {
            if ((this.UploadTemporarySspFile_v1OperationCompleted == null)) {
                this.UploadTemporarySspFile_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadTemporarySspFile_v1OperationCompleted);
            }
            this.InvokeAsync("UploadTemporarySspFile_v1", new object[] {
                        authorizationXml,
                        fileXml}, this.UploadTemporarySspFile_v1OperationCompleted, userState);
        }
        
        private void OnUploadTemporarySspFile_v1OperationCompleted(object arg) {
            if ((this.UploadTemporarySspFile_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadTemporarySspFile_v1Completed(this, new UploadTemporarySspFile_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/DisposeSspFile_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DisposeSspFile_v1(string authorizationXml, string sspFileId) {
            object[] results = this.Invoke("DisposeSspFile_v1", new object[] {
                        authorizationXml,
                        sspFileId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DisposeSspFile_v1Async(string authorizationXml, string sspFileId) {
            this.DisposeSspFile_v1Async(authorizationXml, sspFileId, null);
        }
        
        /// <remarks/>
        public void DisposeSspFile_v1Async(string authorizationXml, string sspFileId, object userState) {
            if ((this.DisposeSspFile_v1OperationCompleted == null)) {
                this.DisposeSspFile_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisposeSspFile_v1OperationCompleted);
            }
            this.InvokeAsync("DisposeSspFile_v1", new object[] {
                        authorizationXml,
                        sspFileId}, this.DisposeSspFile_v1OperationCompleted, userState);
        }
        
        private void OnDisposeSspFile_v1OperationCompleted(object arg) {
            if ((this.DisposeSspFile_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisposeSspFile_v1Completed(this, new DisposeSspFile_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/GetAdHocWorkstepConfiguration_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdHocWorkstepConfiguration_v1(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration) {
            object[] results = this.Invoke("GetAdHocWorkstepConfiguration_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        adHocWorkstepConfiguration});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdHocWorkstepConfiguration_v1Async(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration) {
            this.GetAdHocWorkstepConfiguration_v1Async(authorizationXml, sspFileIds, adHocWorkstepConfiguration, null);
        }
        
        /// <remarks/>
        public void GetAdHocWorkstepConfiguration_v1Async(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration, object userState) {
            if ((this.GetAdHocWorkstepConfiguration_v1OperationCompleted == null)) {
                this.GetAdHocWorkstepConfiguration_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdHocWorkstepConfiguration_v1OperationCompleted);
            }
            this.InvokeAsync("GetAdHocWorkstepConfiguration_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        adHocWorkstepConfiguration}, this.GetAdHocWorkstepConfiguration_v1OperationCompleted, userState);
        }
        
        private void OnGetAdHocWorkstepConfiguration_v1OperationCompleted(object arg) {
            if ((this.GetAdHocWorkstepConfiguration_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdHocWorkstepConfiguration_v1Completed(this, new GetAdHocWorkstepConfiguration_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/PrepareSendEnvelopeSteps_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PrepareSendEnvelopeSteps_v1(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration, string prepareSendEnvelopeStepsDescriptor) {
            object[] results = this.Invoke("PrepareSendEnvelopeSteps_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        adHocWorkstepConfiguration,
                        prepareSendEnvelopeStepsDescriptor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareSendEnvelopeSteps_v1Async(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration, string prepareSendEnvelopeStepsDescriptor) {
            this.PrepareSendEnvelopeSteps_v1Async(authorizationXml, sspFileIds, adHocWorkstepConfiguration, prepareSendEnvelopeStepsDescriptor, null);
        }
        
        /// <remarks/>
        public void PrepareSendEnvelopeSteps_v1Async(string authorizationXml, string[] sspFileIds, string adHocWorkstepConfiguration, string prepareSendEnvelopeStepsDescriptor, object userState) {
            if ((this.PrepareSendEnvelopeSteps_v1OperationCompleted == null)) {
                this.PrepareSendEnvelopeSteps_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareSendEnvelopeSteps_v1OperationCompleted);
            }
            this.InvokeAsync("PrepareSendEnvelopeSteps_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        adHocWorkstepConfiguration,
                        prepareSendEnvelopeStepsDescriptor}, this.PrepareSendEnvelopeSteps_v1OperationCompleted, userState);
        }
        
        private void OnPrepareSendEnvelopeSteps_v1OperationCompleted(object arg) {
            if ((this.PrepareSendEnvelopeSteps_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareSendEnvelopeSteps_v1Completed(this, new PrepareSendEnvelopeSteps_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/DownloadCompletedDocument_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DownloadCompletedDocument_v1(string authorizationXml, string envelopeId, string documentId) {
            object[] results = this.Invoke("DownloadCompletedDocument_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        documentId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadCompletedDocument_v1Async(string authorizationXml, string envelopeId, string documentId) {
            this.DownloadCompletedDocument_v1Async(authorizationXml, envelopeId, documentId, null);
        }
        
        /// <remarks/>
        public void DownloadCompletedDocument_v1Async(string authorizationXml, string envelopeId, string documentId, object userState) {
            if ((this.DownloadCompletedDocument_v1OperationCompleted == null)) {
                this.DownloadCompletedDocument_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadCompletedDocument_v1OperationCompleted);
            }
            this.InvokeAsync("DownloadCompletedDocument_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        documentId}, this.DownloadCompletedDocument_v1OperationCompleted, userState);
        }
        
        private void OnDownloadCompletedDocument_v1OperationCompleted(object arg) {
            if ((this.DownloadCompletedDocument_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadCompletedDocument_v1Completed(this, new DownloadCompletedDocument_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/GetEnvelopeById_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEnvelopeById_v1(string authorizationXml, string envelopeId) {
            object[] results = this.Invoke("GetEnvelopeById_v1", new object[] {
                        authorizationXml,
                        envelopeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnvelopeById_v1Async(string authorizationXml, string envelopeId) {
            this.GetEnvelopeById_v1Async(authorizationXml, envelopeId, null);
        }
        
        /// <remarks/>
        public void GetEnvelopeById_v1Async(string authorizationXml, string envelopeId, object userState) {
            if ((this.GetEnvelopeById_v1OperationCompleted == null)) {
                this.GetEnvelopeById_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnvelopeById_v1OperationCompleted);
            }
            this.InvokeAsync("GetEnvelopeById_v1", new object[] {
                        authorizationXml,
                        envelopeId}, this.GetEnvelopeById_v1OperationCompleted, userState);
        }
        
        private void OnGetEnvelopeById_v1OperationCompleted(object arg) {
            if ((this.GetEnvelopeById_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnvelopeById_v1Completed(this, new GetEnvelopeById_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/FindEnvelopes_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindEnvelopes_v1(string authorizationXml, string findEnvelopesDescriptorXml) {
            object[] results = this.Invoke("FindEnvelopes_v1", new object[] {
                        authorizationXml,
                        findEnvelopesDescriptorXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindEnvelopes_v1Async(string authorizationXml, string findEnvelopesDescriptorXml) {
            this.FindEnvelopes_v1Async(authorizationXml, findEnvelopesDescriptorXml, null);
        }
        
        /// <remarks/>
        public void FindEnvelopes_v1Async(string authorizationXml, string findEnvelopesDescriptorXml, object userState) {
            if ((this.FindEnvelopes_v1OperationCompleted == null)) {
                this.FindEnvelopes_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEnvelopes_v1OperationCompleted);
            }
            this.InvokeAsync("FindEnvelopes_v1", new object[] {
                        authorizationXml,
                        findEnvelopesDescriptorXml}, this.FindEnvelopes_v1OperationCompleted, userState);
        }
        
        private void OnFindEnvelopes_v1OperationCompleted(object arg) {
            if ((this.FindEnvelopes_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEnvelopes_v1Completed(this, new FindEnvelopes_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/FindEnvelopes_v2", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FindEnvelopes_v2(string authorizationXml, string findEnvelopesDescriptorXml, string resultFormat) {
            object[] results = this.Invoke("FindEnvelopes_v2", new object[] {
                        authorizationXml,
                        findEnvelopesDescriptorXml,
                        resultFormat});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FindEnvelopes_v2Async(string authorizationXml, string findEnvelopesDescriptorXml, string resultFormat) {
            this.FindEnvelopes_v2Async(authorizationXml, findEnvelopesDescriptorXml, resultFormat, null);
        }
        
        /// <remarks/>
        public void FindEnvelopes_v2Async(string authorizationXml, string findEnvelopesDescriptorXml, string resultFormat, object userState) {
            if ((this.FindEnvelopes_v2OperationCompleted == null)) {
                this.FindEnvelopes_v2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindEnvelopes_v2OperationCompleted);
            }
            this.InvokeAsync("FindEnvelopes_v2", new object[] {
                        authorizationXml,
                        findEnvelopesDescriptorXml,
                        resultFormat}, this.FindEnvelopes_v2OperationCompleted, userState);
        }
        
        private void OnFindEnvelopes_v2OperationCompleted(object arg) {
            if ((this.FindEnvelopes_v2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindEnvelopes_v2Completed(this, new FindEnvelopes_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/SendEnvelope_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEnvelope_v1(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml) {
            object[] results = this.Invoke("SendEnvelope_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        envelopeDescriptionXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEnvelope_v1Async(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml) {
            this.SendEnvelope_v1Async(authorizationXml, sspFileIds, envelopeDescriptionXml, null);
        }
        
        /// <remarks/>
        public void SendEnvelope_v1Async(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml, object userState) {
            if ((this.SendEnvelope_v1OperationCompleted == null)) {
                this.SendEnvelope_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEnvelope_v1OperationCompleted);
            }
            this.InvokeAsync("SendEnvelope_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        envelopeDescriptionXml}, this.SendEnvelope_v1OperationCompleted, userState);
        }
        
        private void OnSendEnvelope_v1OperationCompleted(object arg) {
            if ((this.SendEnvelope_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEnvelope_v1Completed(this, new SendEnvelope_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/SendEnvelopeFromTemplate_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendEnvelopeFromTemplate_v1(string authorizationXml, string templateId, string overrideOptionsXml) {
            object[] results = this.Invoke("SendEnvelopeFromTemplate_v1", new object[] {
                        authorizationXml,
                        templateId,
                        overrideOptionsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendEnvelopeFromTemplate_v1Async(string authorizationXml, string templateId, string overrideOptionsXml) {
            this.SendEnvelopeFromTemplate_v1Async(authorizationXml, templateId, overrideOptionsXml, null);
        }
        
        /// <remarks/>
        public void SendEnvelopeFromTemplate_v1Async(string authorizationXml, string templateId, string overrideOptionsXml, object userState) {
            if ((this.SendEnvelopeFromTemplate_v1OperationCompleted == null)) {
                this.SendEnvelopeFromTemplate_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEnvelopeFromTemplate_v1OperationCompleted);
            }
            this.InvokeAsync("SendEnvelopeFromTemplate_v1", new object[] {
                        authorizationXml,
                        templateId,
                        overrideOptionsXml}, this.SendEnvelopeFromTemplate_v1OperationCompleted, userState);
        }
        
        private void OnSendEnvelopeFromTemplate_v1OperationCompleted(object arg) {
            if ((this.SendEnvelopeFromTemplate_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEnvelopeFromTemplate_v1Completed(this, new SendEnvelopeFromTemplate_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/SendReminders_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendReminders_v1(string authorizationXml, string envelopeId) {
            object[] results = this.Invoke("SendReminders_v1", new object[] {
                        authorizationXml,
                        envelopeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendReminders_v1Async(string authorizationXml, string envelopeId) {
            this.SendReminders_v1Async(authorizationXml, envelopeId, null);
        }
        
        /// <remarks/>
        public void SendReminders_v1Async(string authorizationXml, string envelopeId, object userState) {
            if ((this.SendReminders_v1OperationCompleted == null)) {
                this.SendReminders_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendReminders_v1OperationCompleted);
            }
            this.InvokeAsync("SendReminders_v1", new object[] {
                        authorizationXml,
                        envelopeId}, this.SendReminders_v1OperationCompleted, userState);
        }
        
        private void OnSendReminders_v1OperationCompleted(object arg) {
            if ((this.SendReminders_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendReminders_v1Completed(this, new SendReminders_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/DeleteEnvelope_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteEnvelope_v1(string authorizationXml, string envelopeId) {
            object[] results = this.Invoke("DeleteEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEnvelope_v1Async(string authorizationXml, string envelopeId) {
            this.DeleteEnvelope_v1Async(authorizationXml, envelopeId, null);
        }
        
        /// <remarks/>
        public void DeleteEnvelope_v1Async(string authorizationXml, string envelopeId, object userState) {
            if ((this.DeleteEnvelope_v1OperationCompleted == null)) {
                this.DeleteEnvelope_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEnvelope_v1OperationCompleted);
            }
            this.InvokeAsync("DeleteEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId}, this.DeleteEnvelope_v1OperationCompleted, userState);
        }
        
        private void OnDeleteEnvelope_v1OperationCompleted(object arg) {
            if ((this.DeleteEnvelope_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEnvelope_v1Completed(this, new DeleteEnvelope_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/CancelEnvelope_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelEnvelope_v1(string authorizationXml, string envelopeId) {
            object[] results = this.Invoke("CancelEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelEnvelope_v1Async(string authorizationXml, string envelopeId) {
            this.CancelEnvelope_v1Async(authorizationXml, envelopeId, null);
        }
        
        /// <remarks/>
        public void CancelEnvelope_v1Async(string authorizationXml, string envelopeId, object userState) {
            if ((this.CancelEnvelope_v1OperationCompleted == null)) {
                this.CancelEnvelope_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelEnvelope_v1OperationCompleted);
            }
            this.InvokeAsync("CancelEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId}, this.CancelEnvelope_v1OperationCompleted, userState);
        }
        
        private void OnCancelEnvelope_v1OperationCompleted(object arg) {
            if ((this.CancelEnvelope_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelEnvelope_v1Completed(this, new CancelEnvelope_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/NotifyEnvelopeWorkstepIsCompleted_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NotifyEnvelopeWorkstepIsCompleted_v1(string authorizationXml, string envelopeId, string workstepId) {
            object[] results = this.Invoke("NotifyEnvelopeWorkstepIsCompleted_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        workstepId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyEnvelopeWorkstepIsCompleted_v1Async(string authorizationXml, string envelopeId, string workstepId) {
            this.NotifyEnvelopeWorkstepIsCompleted_v1Async(authorizationXml, envelopeId, workstepId, null);
        }
        
        /// <remarks/>
        public void NotifyEnvelopeWorkstepIsCompleted_v1Async(string authorizationXml, string envelopeId, string workstepId, object userState) {
            if ((this.NotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted == null)) {
                this.NotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted);
            }
            this.InvokeAsync("NotifyEnvelopeWorkstepIsCompleted_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        workstepId}, this.NotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted, userState);
        }
        
        private void OnNotifyEnvelopeWorkstepIsCompleted_v1OperationCompleted(object arg) {
            if ((this.NotifyEnvelopeWorkstepIsCompleted_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyEnvelopeWorkstepIsCompleted_v1Completed(this, new NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/RestartEnvelope_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestartEnvelope_v1(string authorizationXml, string envelopeId, int expirationInDays) {
            object[] results = this.Invoke("RestartEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        expirationInDays});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestartEnvelope_v1Async(string authorizationXml, string envelopeId, int expirationInDays) {
            this.RestartEnvelope_v1Async(authorizationXml, envelopeId, expirationInDays, null);
        }
        
        /// <remarks/>
        public void RestartEnvelope_v1Async(string authorizationXml, string envelopeId, int expirationInDays, object userState) {
            if ((this.RestartEnvelope_v1OperationCompleted == null)) {
                this.RestartEnvelope_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestartEnvelope_v1OperationCompleted);
            }
            this.InvokeAsync("RestartEnvelope_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        expirationInDays}, this.RestartEnvelope_v1OperationCompleted, userState);
        }
        
        private void OnRestartEnvelope_v1OperationCompleted(object arg) {
            if ((this.RestartEnvelope_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestartEnvelope_v1Completed(this, new RestartEnvelope_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/ReplaceRecipient_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReplaceRecipient_v1(string authorizationXml, string envelopeId, string recipientOverrideXml) {
            object[] results = this.Invoke("ReplaceRecipient_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        recipientOverrideXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReplaceRecipient_v1Async(string authorizationXml, string envelopeId, string recipientOverrideXml) {
            this.ReplaceRecipient_v1Async(authorizationXml, envelopeId, recipientOverrideXml, null);
        }
        
        /// <remarks/>
        public void ReplaceRecipient_v1Async(string authorizationXml, string envelopeId, string recipientOverrideXml, object userState) {
            if ((this.ReplaceRecipient_v1OperationCompleted == null)) {
                this.ReplaceRecipient_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplaceRecipient_v1OperationCompleted);
            }
            this.InvokeAsync("ReplaceRecipient_v1", new object[] {
                        authorizationXml,
                        envelopeId,
                        recipientOverrideXml}, this.ReplaceRecipient_v1OperationCompleted, userState);
        }
        
        private void OnReplaceRecipient_v1OperationCompleted(object arg) {
            if ((this.ReplaceRecipient_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplaceRecipient_v1Completed(this, new ReplaceRecipient_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/CreateDraft_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateDraft_v1(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml, string draftOptionsXml) {
            object[] results = this.Invoke("CreateDraft_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        envelopeDescriptionXml,
                        draftOptionsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDraft_v1Async(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml, string draftOptionsXml) {
            this.CreateDraft_v1Async(authorizationXml, sspFileIds, envelopeDescriptionXml, draftOptionsXml, null);
        }
        
        /// <remarks/>
        public void CreateDraft_v1Async(string authorizationXml, string[] sspFileIds, string envelopeDescriptionXml, string draftOptionsXml, object userState) {
            if ((this.CreateDraft_v1OperationCompleted == null)) {
                this.CreateDraft_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDraft_v1OperationCompleted);
            }
            this.InvokeAsync("CreateDraft_v1", new object[] {
                        authorizationXml,
                        sspFileIds,
                        envelopeDescriptionXml,
                        draftOptionsXml}, this.CreateDraft_v1OperationCompleted, userState);
        }
        
        private void OnCreateDraft_v1OperationCompleted(object arg) {
            if ((this.CreateDraft_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDraft_v1Completed(this, new CreateDraft_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/CreateDraftFromTemplate_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateDraftFromTemplate_v1(string authorizationXml, string templateId, string overrideOptionsXml, string draftOptionsXml) {
            object[] results = this.Invoke("CreateDraftFromTemplate_v1", new object[] {
                        authorizationXml,
                        templateId,
                        overrideOptionsXml,
                        draftOptionsXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDraftFromTemplate_v1Async(string authorizationXml, string templateId, string overrideOptionsXml, string draftOptionsXml) {
            this.CreateDraftFromTemplate_v1Async(authorizationXml, templateId, overrideOptionsXml, draftOptionsXml, null);
        }
        
        /// <remarks/>
        public void CreateDraftFromTemplate_v1Async(string authorizationXml, string templateId, string overrideOptionsXml, string draftOptionsXml, object userState) {
            if ((this.CreateDraftFromTemplate_v1OperationCompleted == null)) {
                this.CreateDraftFromTemplate_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDraftFromTemplate_v1OperationCompleted);
            }
            this.InvokeAsync("CreateDraftFromTemplate_v1", new object[] {
                        authorizationXml,
                        templateId,
                        overrideOptionsXml,
                        draftOptionsXml}, this.CreateDraftFromTemplate_v1OperationCompleted, userState);
        }
        
        private void OnCreateDraftFromTemplate_v1OperationCompleted(object arg) {
            if ((this.CreateDraftFromTemplate_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDraftFromTemplate_v1Completed(this, new CreateDraftFromTemplate_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/UploadUserFile_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadUserFile_v1(string userToken, string flowFileXml, string senderApplication) {
            object[] results = this.Invoke("UploadUserFile_v1", new object[] {
                        userToken,
                        flowFileXml,
                        senderApplication});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadUserFile_v1Async(string userToken, string flowFileXml, string senderApplication) {
            this.UploadUserFile_v1Async(userToken, flowFileXml, senderApplication, null);
        }
        
        /// <remarks/>
        public void UploadUserFile_v1Async(string userToken, string flowFileXml, string senderApplication, object userState) {
            if ((this.UploadUserFile_v1OperationCompleted == null)) {
                this.UploadUserFile_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadUserFile_v1OperationCompleted);
            }
            this.InvokeAsync("UploadUserFile_v1", new object[] {
                        userToken,
                        flowFileXml,
                        senderApplication}, this.UploadUserFile_v1OperationCompleted, userState);
        }
        
        private void OnUploadUserFile_v1OperationCompleted(object arg) {
            if ((this.UploadUserFile_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadUserFile_v1Completed(this, new UploadUserFile_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/GetVersion_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion_v1() {
            object[] results = this.Invoke("GetVersion_v1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersion_v1Async() {
            this.GetVersion_v1Async(null);
        }
        
        /// <remarks/>
        public void GetVersion_v1Async(object userState) {
            if ((this.GetVersion_v1OperationCompleted == null)) {
                this.GetVersion_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersion_v1OperationCompleted);
            }
            this.InvokeAsync("GetVersion_v1", new object[0], this.GetVersion_v1OperationCompleted, userState);
        }
        
        private void OnGetVersion_v1OperationCompleted(object arg) {
            if ((this.GetVersion_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersion_v1Completed(this, new GetVersion_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [SoapDocumentMethod("http://www.eSignAnyWhere.com/ValidateAuthorization_v1", RequestNamespace="http://www.eSignAnyWhere.com/", ResponseNamespace="http://www.eSignAnyWhere.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateAuthorization_v1(string authorizationXml) {
            object[] results = this.Invoke("ValidateAuthorization_v1", new object[] {
                        authorizationXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAuthorization_v1Async(string authorizationXml) {
            this.ValidateAuthorization_v1Async(authorizationXml, null);
        }
        
        /// <remarks/>
        public void ValidateAuthorization_v1Async(string authorizationXml, object userState) {
            if ((this.ValidateAuthorization_v1OperationCompleted == null)) {
                this.ValidateAuthorization_v1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAuthorization_v1OperationCompleted);
            }
            this.InvokeAsync("ValidateAuthorization_v1", new object[] {
                        authorizationXml}, this.ValidateAuthorization_v1OperationCompleted, userState);
        }
        
        private void OnValidateAuthorization_v1OperationCompleted(object arg) {
            if ((this.ValidateAuthorization_v1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAuthorization_v1Completed(this, new ValidateAuthorization_v1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UploadTemporarySspFile_v1CompletedEventHandler(object sender, UploadTemporarySspFile_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class UploadTemporarySspFile_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadTemporarySspFile_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DisposeSspFile_v1CompletedEventHandler(object sender, DisposeSspFile_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class DisposeSspFile_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisposeSspFile_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetAdHocWorkstepConfiguration_v1CompletedEventHandler(object sender, GetAdHocWorkstepConfiguration_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetAdHocWorkstepConfiguration_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdHocWorkstepConfiguration_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void PrepareSendEnvelopeSteps_v1CompletedEventHandler(object sender, PrepareSendEnvelopeSteps_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class PrepareSendEnvelopeSteps_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareSendEnvelopeSteps_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DownloadCompletedDocument_v1CompletedEventHandler(object sender, DownloadCompletedDocument_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class DownloadCompletedDocument_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadCompletedDocument_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetEnvelopeById_v1CompletedEventHandler(object sender, GetEnvelopeById_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetEnvelopeById_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnvelopeById_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FindEnvelopes_v1CompletedEventHandler(object sender, FindEnvelopes_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class FindEnvelopes_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEnvelopes_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void FindEnvelopes_v2CompletedEventHandler(object sender, FindEnvelopes_v2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class FindEnvelopes_v2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindEnvelopes_v2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendEnvelope_v1CompletedEventHandler(object sender, SendEnvelope_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SendEnvelope_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEnvelope_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendEnvelopeFromTemplate_v1CompletedEventHandler(object sender, SendEnvelopeFromTemplate_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SendEnvelopeFromTemplate_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEnvelopeFromTemplate_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendReminders_v1CompletedEventHandler(object sender, SendReminders_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class SendReminders_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendReminders_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DeleteEnvelope_v1CompletedEventHandler(object sender, DeleteEnvelope_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class DeleteEnvelope_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEnvelope_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void CancelEnvelope_v1CompletedEventHandler(object sender, CancelEnvelope_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class CancelEnvelope_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelEnvelope_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventHandler(object sender, NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyEnvelopeWorkstepIsCompleted_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void RestartEnvelope_v1CompletedEventHandler(object sender, RestartEnvelope_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class RestartEnvelope_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestartEnvelope_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReplaceRecipient_v1CompletedEventHandler(object sender, ReplaceRecipient_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ReplaceRecipient_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReplaceRecipient_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void CreateDraft_v1CompletedEventHandler(object sender, CreateDraft_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class CreateDraft_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDraft_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void CreateDraftFromTemplate_v1CompletedEventHandler(object sender, CreateDraftFromTemplate_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class CreateDraftFromTemplate_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDraftFromTemplate_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UploadUserFile_v1CompletedEventHandler(object sender, UploadUserFile_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class UploadUserFile_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadUserFile_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void GetVersion_v1CompletedEventHandler(object sender, GetVersion_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class GetVersion_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersion_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ValidateAuthorization_v1CompletedEventHandler(object sender, ValidateAuthorization_v1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [DebuggerStepThrough()]
    [DesignerCategory("code")]
    public partial class ValidateAuthorization_v1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAuthorization_v1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591